#!/bin/bash
#SBATCH --job-name=fl_yolo_slurm
#SBATCH --partition=gp2d      ## Partition: gtest | gp2d
#SBATCH --account=GOV113038  ## iService_ID Project ID
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --gpus-per-node=1
#SBATCH --cpus-per-task=4
#SBATCH --output=experiments/slurm.out
#SBATCH --error=experiments/slurm.out

### 參數設定
# 請務必確認 WROOT 的設置正確
export WROOT="/home/waue0920/fl_yolo_slurm"
DATASET_NAME="kitti"
CLIENT_NUM=4
TOTAL_ROUNDS=4
source "${WROOT}/src/env.sh"

# ===================================================================================
# This script is a simple launcher for orchestrate.sh.
# It acquires a compute node and executes orchestrate.sh on it,
# passing along all command-line arguments.
# ===================================================================================


TIMESTAMP=$(date +%Y%m%d%H%M)
RUN_COUNT=$(find "${EXPERIMENTS_BASE_DIR}" -maxdepth 1 -type d | wc -l)
RUN_NUM=$((RUN_COUNT))
export EXP_ID="${RUN_NUM}_${DATASET_NAME}_${CLIENT_NUM}C_${TOTAL_ROUNDS}R_${TIMESTAMP}"



# 啟動 fl 訓練，將 EXP_ID 一併傳遞給 orchestrate.sh
bash "${WROOT}/src/orchestrate.sh" "$DATASET_NAME" "$CLIENT_NUM" "$TOTAL_ROUNDS" --val --manual >> ./experiments/sop.sh
bash "${WROOT}/src/orchestrate.sh" "$DATASET_NAME" "$CLIENT_NUM" "$TOTAL_ROUNDS"


cd "${WROOT}"
echo "#################"
echo "# Start validation..."
echo "#################"
# 驗證階段
if singularity exec --nv --bind "${WROOT}":"${WROOT}" \
    "${SINGULARITY_IMG}" \
    python3 "${WROOT}/src/validate_federated_model.py" \
    --experiment-dir "${WROOT}/experiments/${EXP_ID}" \
    --data-config "${WROOT}/data/${DATASET_NAME}.yaml" \
    ; then
    echo "--- Model validation complete. ---"
    VALIDATION_MSG="##  Validation results: experiments/${EXP_ID}/validation/"
else
    echo "Warning: Model validation failed, but experiment completed successfully."
    VALIDATION_MSG="##  Validation: Failed (see logs above)"
fi
echo "${VALIDATION_MSG}"
